// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyPlaylistCurator.Models;

namespace SpotifyPlaylistCurator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.AuthenticationObject", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("access_token");

                    b.Property<int>("expires_in");

                    b.Property<string>("refresh_token");

                    b.Property<string>("scope");

                    b.Property<string>("token_type");

                    b.HasKey("Id");

                    b.ToTable("AuthenticationObjects");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("PlaylistId");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.Playlist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.PlaylistRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Duration");

                    b.HasKey("Id");

                    b.ToTable("PlaylistRequests");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PlaylistId");

                    b.Property<string>("SongId");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSong");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.SongGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GenresId");

                    b.Property<string>("SongId");

                    b.HasKey("Id");

                    b.HasIndex("GenresId");

                    b.HasIndex("SongId");

                    b.ToTable("SongGenre");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.Genre", b =>
                {
                    b.HasOne("SpotifyPlaylistCurator.Models.Playlist")
                        .WithMany("Genres")
                        .HasForeignKey("PlaylistId");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.PlaylistSong", b =>
                {
                    b.HasOne("SpotifyPlaylistCurator.Models.Playlist", "Playlist")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("PlaylistId");

                    b.HasOne("SpotifyPlaylistCurator.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId");
                });

            modelBuilder.Entity("SpotifyPlaylistCurator.Models.SongGenre", b =>
                {
                    b.HasOne("SpotifyPlaylistCurator.Models.Genre", "Genres")
                        .WithMany()
                        .HasForeignKey("GenresId");

                    b.HasOne("SpotifyPlaylistCurator.Models.Song", "Song")
                        .WithMany("SongGenres")
                        .HasForeignKey("SongId");
                });
#pragma warning restore 612, 618
        }
    }
}
